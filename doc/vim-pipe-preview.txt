*vim-pipe-preview.txt* Piped command output preview in a new split
*vim-pipe-preview*

Author:  Stephen Kent <https://github.com/smkent/vim-pipe-preview>
License: GPLv3 (See LICENSE and COPYING in the plugin repository)


==============================================================================
INTRODUCTION                                *vim-pipe-preview-introduction*

vim-pipe-preview provides a way to pipe a buffer through an external command
and display the output in a separate split.

A command must be specified before this plugin can be used. See
|vim-pipe-preview-configuration|.

When activated (see |vim-pipe-preview-commands|), a new vertical split is
opened to the right of the current buffer. The current buffer contents are
piped through the configured external command, and the output is displayed in
the new window split. The buffer and its preview have 'scrollbind' set in
order to scroll together.

The preview window is updated automatically each time the parent buffer is
saved, until the preview window is closed.

If AnsiEsc (https://github.com/vim-scripts/AnsiEsc.vim) is installed, ANSI
color escape codes will be evaluated in the preview window automatically.


==============================================================================
CONFIGURATION                               *vim-pipe-preview-configuration*

                                            *g:pipe_preview_command*
External command to pass buffer contents to. The specified command must accept
buffer contents on standard input.

For example, to filter buffer contents through grep with a search term: >
    let g:pipe_preview_command = 'grep -e "search-term"'
<

==============================================================================
COMMANDS                                    *vim-pipe-preview-commands*

                                            *:PipePreview*
Start preview for the current buffer.


 vim:tw=78:et:ft=help:norl:
